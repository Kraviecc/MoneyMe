// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyMe.Modules.Ledger.Infrastructure.EF;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoneyMe.Modules.Ledger.Infrastructure.EF.Migrations
{
    [DbContext(typeof(LedgerDbContext))]
    partial class LedgerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ledger")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoneyMe.Modules.Ledger.Domain.Categories.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InvestmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories", "ledger");
                });

            modelBuilder.Entity("MoneyMe.Modules.Ledger.Domain.LedgerEntries.Entities.LedgerEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InvestmentComponentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LedgerEntries", "ledger");

                    b.HasDiscriminator<string>("Type").HasValue("LedgerEntry");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MoneyMe.Modules.Ledger.Domain.LedgerEntries.Entities.Expense", b =>
                {
                    b.HasBaseType("MoneyMe.Modules.Ledger.Domain.LedgerEntries.Entities.LedgerEntry");

                    b.HasDiscriminator().HasValue("expense");
                });

            modelBuilder.Entity("MoneyMe.Modules.Ledger.Domain.LedgerEntries.Entities.Income", b =>
                {
                    b.HasBaseType("MoneyMe.Modules.Ledger.Domain.LedgerEntries.Entities.LedgerEntry");

                    b.HasDiscriminator().HasValue("income");
                });
#pragma warning restore 612, 618
        }
    }
}
